const agregarEgreso = {
    template: `{{> agregarEgreso/agregarEgresoHTML.hbs}}`,
    data() {
        return {
            egreso: {
                fechaOperacion: null,
                proveedor: null,
                medioDePago: {
                    id: null,
                    dato: null
                },
                documentoComercial: {
                    tipo: null,
                    numeroDocumento: null,
                    fechaDePedido: null,
                    fechaDeEntrega: null,
                    descripcion: null,
                    imagenDelDocumento: null
                },
                items: []
            },
            idEgreso: null,
            falloInput: false,
            falloCarga: false,
            proveedoresSelect: [],
            mediosDePagoSelect: [],
            mediosDePagoType: {
                credit_card: []
            },
            tipoDocumentoSelect: [{
                    value: 1,
                    text: "Factura A"
                },
                {
                    value: 2,
                    text: "Factura B"
                },
                {
                    value: 3,
                    text: "Factura C"
                }
            ],
            proveedoresLoading: false,
            mediosDePagoLoading: false,
            egresoLoading: false,

            suscribirse: false,
            proveedorAAgregar: null,
            presupuestosAAgregar: [],
            categoriasAAsociar: [],
            ingresoAAsociar: null,
            presupuestosAAgregarCampos: [
                {
                    key: 'fechaVigente',
                    tdClass: ['w-50'],
                    thClass: ['w-50']
                },
                {
                    key: 'numeroOperacion',
                    tdClass: ['w-50'],
                    thClass: ['w-50']
                },
                {
                    key: 'items',
                    tdClass: ['text-center'],
                    thClass: ['text-center']
                },
                {
                    key: 'delete',
                    label: '',
                    tdClass: [],
                    thClass: ['text-center']
                }
            ]
        }
    },
    computed: {
        state(data) {
            console.log(data);
            return false;
        }
    },
    methods: {
        convertDate: convertDate,
        softReloadPage: softReloadPage,
        getCookie: getCookie,
        confirmar() {

            this.egresoLoading = true;
            
            // Verifico que los input sean correctos
            var todosLosCamposRellenos = 
                this.egreso.fechaOperacion                      &&
                this.egreso.proveedor                           &&
                this.egreso.medioDePago.id                      &&
                this.egreso.medioDePago.dato                    &&
                this.egreso.documentoComercial.tipo             &&
                this.egreso.documentoComercial.numeroDocumento  &&
                this.egreso.documentoComercial.fechaDePedido    &&
                this.egreso.documentoComercial.fechaDeEntrega   &&
                this.egreso.items.length > 1

            if(this.ingresoAAsociar != null) {
                todosLosCamposRellenos = this.precioTotal() <= this.ingresoAAsociar.montoTotal
            }
            this.falloInput = !todosLosCamposRellenos;
            if(this.falloInput) {
                this.egresoLoading = false;
                return;
            }
            
            // Comienzo cargando el proveedor
            this.crearProveedorAPI();

        },
        crearProveedorAPI() {
            if (this.proveedorAAgregar != null) {
                // Hay que agregar un proveedor antes de agregar el egreso
                console.log("POST '/api/proveedor'");
                console.log(JSON.stringify(this.proveedorAAgregar, null, 4));

                $.ajax({
                    url: "http://{{ ip }}/api/proveedor",
                    type: "POST",
                    dataType: "json",
                    context: this,
                    data: JSON.stringify(this.proveedorAAgregar),
                    success(response) {
                        if(response.code == 403) {
                            app.showSessionEndedAlert(false);
                        } else if(response.code == 400) {
                            // Fallo la carga de proveedor
                            this.falloCarga = true;
                        } else if(response.code == 200) {
                            // El proveedor se creo exitosamente
                            this.egreso.proveedor = response.id;
                            // Creo el egreso
                            this.crearEgresoAPI();
                        } else {
                            // Fallo la carga de proveedor (default)
                            this.falloCarga = true;
                            app.createCommonErrors(response);
                        }
                    },
                    error(data) {
                        this.falloCarga = true;
                        app.createCommonErrors(data);
                    }
                });
            } else {
                this.crearEgresoAPI()
            }
        },
        crearEgresoAPI() {
            var egresoToSend = JSON.parse(JSON.stringify(this.egreso));
            egresoToSend.items.pop();

            console.log("POST '/api/operaciones/egreso'");
            console.log(JSON.stringify(egresoToSend, null, 4));

            $.ajax({
                url: "http://{{ ip }}/api/operaciones/egreso",
                type: "POST",
                dataType: "json",
                context: this,
                data: JSON.stringify(egresoToSend),
                success(response) {
                    if(response.code == 403) {
                        app.showSessionEndedAlert(false);
                    } else if(response.code == 400) {
                        // Fallo la carga de egreso
                        this.falloCarga = true;
                    } else if(response.code == 200) {
                        // El egreso se creo exitosamente
                        this.idEgreso = response.id;
                        // Creo los presupuestos
                        this.crearPresupuestosAPI();
                    } else {
                        // Fallo la carga de egreso (default)
                        this.falloCarga = true;
                        app.createCommonErrors(response);
                    }
                },
                error(data) {
                    this.falloCarga = true;
                    app.createCommonErrors(data);
                }
            });
        },
        crearPresupuestosAPI() {
            // Proximamente
            this.asociarCategoriasAPI();
        },
        asociarCategoriasAPI() {
            if(this.categoriasAAsociar) {
                var request = {
                    id: this.idEgreso,
                    categorias: this.categoriasAAsociar.map(function(categoria){
                        return categoria.id;
                    }),
                }

                console.log("POST '/api/categorias/asociar'");
                console.log(JSON.stringify(request, null, 4));

                $.ajax({
                    url: "http://{{ ip }}/api/categorias/asociar",
                    type: "POST",
                    dataType: "json",
                    context: this,
                    data: JSON.stringify(request),
                    success(response) {
                        if(response.code == 403) {
                            app.showSessionEndedAlert(false);
                        } else if(response.code == 400) {
                            // Fallo la asociacion de categorias
                            this.falloCarga = true;
                        } else if(response.code == 200) {
                            // Las categorias se asociaron correctamente
                            console.log(response);
                            this.asociarIngresoAPI();
                        } else {
                            // Fallo la asociacion de categorias (default)
                            this.falloCarga = true;
                            app.createCommonErrors(response);
                        }
                    },
                    error(data) {
                        this.falloCarga = true;
                        app.createCommonErrors(data);
                    }
                });
            } else {
                this.asociarIngresoAPI();
            }
        },
        asociarIngresoAPI() {

            if(this.ingresoAAsociar) {
                var request = {
                    ingresoId: this.ingresoAAsociar.id,
                    egresoId: this.idEgreso,
                }

                console.log("POST '/api/operaciones/asociarManualmente'");
                console.log(JSON.stringify(request, null, 4));

                $.ajax({
                    url: "http://{{ ip }}/api/operaciones/asociarManualmente",
                    type: "POST",
                    dataType: "json",
                    context: this,
                    data: JSON.stringify(request),
                    success(response) {
                        if(response.code == 403) {
                            app.showSessionEndedAlert(false);
                        } else if(response.code == 400) {
                            // Fallo la asociacion de ingreso
                            this.falloCarga = true;
                        } else if(response.code == 200) {
                            // El ingreso se asociÃ³ correctamente
                            console.log(response);
                            app.createToast('Guardado exitoso', 'Se dio de alta el egreso correctamente', 'success');
                            this.$router.push('/operaciones/egreso');
                        } else {
                            // Fallo la asociacion de ingreso (default)
                            this.falloCarga = true;
                            app.createCommonErrors(response);
                        }
                    },
                    error(data) {
                        this.falloCarga = true;
                        app.createCommonErrors(data);
                    }
                });
            } else {
                this.$router.push('/operaciones/egreso');
            }
        },
        cargarProveedoresAPI() {
            this.proveedoresLoading = true;
            var request = {
                url: "http://{{ ip }}/api/proveedores",
                type: "GET",
                dataType: "json",
                context: this,
                cache: false,
                success(response) {
                    if(response.code == 403) {
                        app.showSessionEndedAlert(true);
                    } else if(response.code == 200) {
                        this.proveedoresSelect = response.data.map(this.proveedoresAPIConverter);
                    }
                    else {
                        app.createCommonErrors(response);
                    }
                },
                error(data) {
                    app.createCommonErrors(data);
                },
                complete() {
                    this.proveedoresLoading = false;
                }
            };
            $.ajax(request);
        },
        proveedoresAPIConverter(proveedor) {
            return {
                value: proveedor.id,
                text: proveedor.nombre
            }
        },
        cargarMediosDePagoAPI() {
            this.mediosDePagoLoading = true;
            var request = {
                url: "http://{{ ip }}/api/medios",
                type: "GET",
                dataType: "json",
                context: this,
                cache: false,
                success(response) {
                    if(response.code == 403) {
                        app.showSessionEndedAlert(true);
                    } else if(response.code == 200) {
                        this.mediosDePagoSelect = response.data.map(this.mediosDePagoAPIConverter);
                    }
                    else {
                        app.createCommonErrors(response);
                    }
                },
                error(data) {
                    app.createCommonErrors(data);
                },
                complete() {
                    this.mediosDePagoLoading = false;
                }
            };
            $.ajax(request);
        },
        mediosDePagoAPIConverter(medioDePago) {
            return {
                value: medioDePago.id,
                text: medioDePago.medioDePago.charAt(0).toUpperCase() + medioDePago.medioDePago.slice(1), // Le pongo mayuscula la primer letra
                type: medioDePago.medioDePago
            }
        },
        actualizarItems(items) {
            this.egreso.items = items;
        },
        // Proveedores
        confirmarNuevoProveedor(data) {
            this.$bvModal.hide('modal-agregar-proveedor');
            console.log(data);

            this.proveedorAAgregar = data;
            this.egreso.proveedor = "nuevoProveedor";
        },
        cancelarNuevoProveedor() {
            this.$bvModal.hide('modal-agregar-proveedor');
        },
        // Presupuestos
        confirmarNuevoPresupuesto(data) {
            this.$bvModal.hide('modal-agregar-presupuesto');
            console.log(data);

            this.presupuestosAAgregar.push(data);
        },
        cancelarNuevoPresupuesto() {
            this.$bvModal.hide('modal-agregar-presupuesto');
        },
        removerPresupuesto(index) {
            this.presupuestosAAgregar.splice(index, 1);
        },
        // Categorias
        confirmarAsociarCategorias(data) {
            this.$bvModal.hide('modal-asociar-categoria');
            console.log(data);

            this.categoriasAAsociar = data;
        },
        cancelarAsociarCategorias() {
            this.$bvModal.hide('modal-asociar-categoria');
        },
        // Ingreso
        confirmarAsociarIngreso(data) {
            this.$bvModal.hide('modal-asociar-ingreso');
            console.log(data);

            this.ingresoAAsociar = data;
        },
        cancelarAsociarIngreso() {
            this.$bvModal.hide('modal-asociar-ingreso');
        },
        
        precioTotal() {
            var precio = 0;
            this.egreso.items.forEach(item => {
                var itemPrecio = parseFloat(item.precio);
                var itemCantidad = parseInt(item.cantidad);

                if(!isNaN(itemPrecio) && !isNaN(itemCantidad))
                    precio += itemPrecio * itemCantidad;
            });
            return precio;
        }
    },
    mounted() {
        this.cargarProveedoresAPI();
        this.cargarMediosDePagoAPI();
    },
    components: {
        'tabla-items': tablaItems,
        'asociar-categoria': asociarCategoria,
        'asociar-ingreso': asociarIngreso,
        'agregar-proveedor': agregarProveedor,
        'agregar-presupuesto': agregarPresupuesto
    },
    watch: {
        'egreso.medioDePago.id': function (medioDePagoId) {

        }
    }
};