const operaciones = {
    template: `{{> operaciones/operacionesHTML.hbs}}`,
    data() {
        return {
            egresos: [],
            ingresos: [
                {}
            ],
            egresosLoading: false,
            egresoSelected: null,
            campos_egresos: [
                { key: 'name', label: 'Egreso', thClass:['w-100'], tdClass:[] },
                { key: 'validado', label: 'Estado', thClass:['text-center'], tdClass:['text-center'] },
                { key: 'valorTotal', label: 'Total', thClass:['text-center'], tdClass:['text-center'] },
                { key: 'fechaOperacion', label: 'Emitido', thClass:['text-center'], tdClass:['text-center'] }
            ],
            campos_ingresos: [
                { key: 'name', label: 'Ingreso', thClass:['w-100'], tdClass:[] },
                { key: 'monto_total', label: 'Total', thClass:['text-center'], tdClass:['text-center'] },
                { key: 'descripcion', label: 'Descripcion', thClass:['text-center'], tdClass:['text-center'] },
                { key: 'fecha_operacion', label: 'Fecha OperaciÃ³n', thClass: ['text-center'], tdClass: ['text-center'] },
            ],
            transProps: {
              name: "fade"
            }
        }
    },
    methods: {
        convertDate: convertDate,
        cargarEgresosAPI(){
            this.egresosLoading = true;
            $.ajax({
                url: "http://{{ ip }}/api/operaciones/egresos",
                type: "GET",
                dataType: "json",
                context: this,
                success(response) {
                    if(response.code == 403) {
                        app.showSessionEndedAlert(true);
                    } else if(response.code == 200) {
                        console.log(response);
                        this.egresos = response.egresos.map(this.egresosAPIConverter);
                    }
                    console.log(response);
                },
                complete() {
                    this.egresosLoading = false;
                }
            });
        },
        egresosAPIConverter(egresoAPI) {
            return {
                id: egresoAPI.id,
                name: 'Egreso ' + egresoAPI.id,
                validado: egresoAPI.validado,
                valorTotal: egresoAPI.valorTotal,
                fechaOperacion: convertDate(egresoAPI.fecha),
                _showDetails: true,
                showEgreso: false
            }
        },
        toggleEgreso(row) {
            console.log(row);

            if(!row.showEgreso) {
                this.$router.push('/operaciones/egreso/'+ row.id);
            } else {
                this.$router.push('/operaciones/egreso');
            }
        },
        seleccionarEgreso() {
            var id = this.$route.params.id;

            this.egresos.forEach(egreso => {
                if(egreso.id != id)
                    egreso.showEgreso = false;
                else
                    egreso.showEgreso = true;
            });
        },
        rowStyle(item, type) {
            if(type == 'row') {
                if(item.showEgreso) {
                    return ['bg-secondary', 'text-light'];
                }
            }
        }
    },
    components: {
        'egreso': egreso
    },
    watch: {
        $route(to, from) {
            this.seleccionarEgreso();
        },
        egresosLoading(to, from) {
            if(to == false) {
                this.seleccionarEgreso();
            }
        }
    },
    mounted() {
        this.cargarEgresosAPI();
        this.seleccionarEgreso();
    }
};