<!DOCTYPE html>
<html lang="es">
    <head>
        {{> head.hbs}}
    </head>
    <body cz-shortcut-listen="true">
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/navbar.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/simple-sidebar.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/dropdown.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/transitions.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/criterio.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/tables.css"/>

        <div id="app">
            <transition name="fade" mode="out-in">
                <router-view ref="childComponent"></router-view>
            </transition>
        </div>

        <script>
            const error404 = {
                template: `{{> 404.hbs}}`
            };
            const inicio = {
                template: `{{> inicio.hbs}}`
            };
            {{> tablaItems/itemsJS.hbs}}
            {{> asociarCategoria/asociarCategoriaJS.hbs}}
            {{> asociarIngreso/asociarIngresoJS.hbs}}
            {{> egreso/egresoJS.hbs}}
            {{> operaciones/operacionesJS.hbs}}
            {{> bandeja/bandejaJS.hbs}}
            {{> configuracion/configuracionJS.hbs}}
            {{> agregarProveedor/agregarProveedorJS.hbs}}
            {{> agregarPresupuesto/agregarPresupuestoJS.hbs}}
            {{> agregarEgreso/agregarEgresoJS.hbs}}
            {{> agregarIngreso/agregarIngresoJS.hbs }}
            {{> login/loginJS.hbs }}
            {{> panel/panelJS.hbs }}
            
            {{> router/routerJS.hbs}}

            var app = new Vue({
                el: "#app",
                data: {},
                methods: {
                    showSessionEndedAlert(reloadPage) {
                        this.$refs.childComponent.showSessionEndedAlert(reloadPage);
                    },
                    createToast(title, body, variant) {
                        this.$bvToast.toast(body, {
                            title: title,
                            variant: variant,
                            toaster: 'b-toaster-bottom-right',
                            solid: true,
                            appendToToast: true
                        });
                    },
                    createCommonErrors(response) {
                        console.log(response);
                        if(response.status) {
                            switch(response.status) {
                                case 500 :
                                    this.createToast('Error 500', 'Ha ocurrido un error en el servidor, vuelva a intentarlo mas tarde', 'danger');
                                    break;
                                default :
                                    this.createToast('Error', 'Ha ocurrido un error, vuelva a intentarlo mas tarde', 'danger');
                            }
                        } else {
                            this.createToast('Error', 'Ha ocurrido un error, vuelva a intentarlo mas tarde', 'danger');
                        }
                    }
                },
                router: router
            });

            function convertDate(date) {
                var dateParsed = new Date(Date.parse(date));
                return ('0' + dateParsed.getDate()).slice(-2) + '/'
                    + ('0' + (dateParsed.getMonth()+1)).slice(-2) + '/'
                    + dateParsed.getFullYear();
            }

            function softReloadPage() {
                app.softReloadPage();
            }

            function getCookie(cname) {
                var name = cname + "=";
                var decodedCookie = decodeURIComponent(document.cookie);
                var ca = decodedCookie.split(';');
                for(var i = 0; i <ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) == ' ') {
                        c = c.substring(1);
                    }
                    if (c.indexOf(name) == 0) {
                        return c.substring(name.length, c.length);
                    }
                }
                return "";
            }

            function capitalizeFirstLetter(string) {
                return string.charAt(0).toUpperCase() + string.slice(1);
            }
        </script>
    </body>
</html>