<!DOCTYPE html>
<html lang="es">
    <head>
        {{> head.hbs}}
    </head>
    <body cz-shortcut-listen="true">
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/navbar.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/simple-sidebar.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/dropdown.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/transitions.css"/>
        <link type="text/css" rel="stylesheet" href="http://{{ ip }}/css/criterio.css"/>
        <!-- Panel -->
        <div id="panel">
            <b-overlay variant="warning" opacity="0.2" :show="loggedOut" no-wrap>
                <template #overlay>
                    <b-card
                        class="shadow"
                        title="Se ha cerrado la sesión"
                        style="width: 25rem"
                    >
                        <b-overlay spinner-variant="light" variant="primary" rounded="sm" :show="login.loginLoading" no-wrap></b-overlay>
                        <div class="pt-2">
                            <p>Por favor inicia sesión nuevamente</p>
                            <b-collapse :visible="login.userState == false">
                                <p class="text-danger text-left m-0"><span>Completa el campo usuario</span></p>
                            </b-collapse>
                            <b-form-input class="mb-2" v-model="login.user" :state="login.userState" type="text" placeholder="Usuario"></b-form-input>

                            <b-collapse :visible="login.passState == false">
                                <p class="text-danger text-left m-0"><span>Completa el campo contraseña</span></p>
                            </b-collapse>
                            <b-form-input v-model="login.pass" :state="login.passState" type="password" placeholder="Contraseña"></b-form-input>

                            <b-collapse :visible="login.loginState == false" class="mt-2">
                                <p class="text-danger text-left m-0"><span>Usuario y/o contraseña no coinciden</span></p>
                            </b-collapse>
                            <b-button variant="primary" type="submit" class="mt-4" @click.prevent="loginAttempt">Iniciar Sesión</b-button>
                        </div>
                    </b-card>
                </template>
            </b-overlay>
            <!-- Navbar -->
            <nav class="navbar navbar-expand-md navbar-light bg-light border-bottom d-flex flex-nowrap">
                <button class="navbar-toggler border-0 p-1 mr-2" data-toggle="collapse" v-on:click="sidebarShow = !sidebarShow">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <!-- Nombre de organizacion -->
                <div id="navbar-organizacion" class="navbar-brand mr-2" v-bind:class="{'hide-organizacion': searchSelected}">
                    <img src="http://{{ ip }}/img/utn_logo.png" width="30" height="30" class="d-inline-block align-top" alt="">
                    <span class="p-2">Organización</span>
                </div>
                <!-- Busqueda -->
                <form id="search-wrapper" v-bind:class="{'show-search': searchSelected}" v-on:submit.prevent="search()">
                    <b-input-group class="mr-2" style="flex-wrap: nowrap">
                        <b-input-group-prepend>
                            <b-button variant="outline" class="border-secondary" type="submit"
                                v-model="query" 
                                v-on:focus="searchSelected = true" 
                                v-on:blur="searchSelected = false"
                            ><b-icon-search></b-icon-search></b-button>
                        </b-input-group-prepend>
                        <b-form-input class="border-secondary" placeholder="Buscar"
                            v-model="query" 
                            v-on:focus="searchSelected = true" 
                            v-on:blur="searchSelected = false"
                        ></b-form-input>
                    </b-input-group>
                </form>
                <!-- Avatar -->
                <div class="ml-auto" v-b-toggle.user-content>
                    <b-avatar variant="primary" text="J" src="http://{{ ip }}/img/usuarios/user.png"></b-avatar>
                </div>
                <!-- Panel de opciones de usuario -->
                <b-collapse class="shadow-lg" id="user-content" class="p-2">
                    <b-list-group>
                        <b-list-group-item>Javier</b-list-group-item>
                        <b-list-group-item to="/configuracion" v-b-toggle.user-content>
                                <b-icon-gear-fill class="mr-2"></b-icon-gear-fill> Configuración
                        </b-list-group-item>
                        <b-list-group-item v-b-toggle.user-content>
                            <b-icon-box-arrow-left class="mr-2"></b-icon-box-arrow-left> Cerrar sesión
                        </b-list-group-item>
                    </b-list-group>
                </b-collapse>
            </nav>
            <!-- /#navbar-wrapper -->

            <div class="d-flex" v-bind:class="{toggled: !sidebarShow}" id="wrapper">
                <!-- Sidebar -->
                <div class="bg-light border-right" id="sidebar-wrapper">
                    <div class="list-group list-group-flush">
                        <template v-for="(page, index) in sidebar">
                            <router-link class="list-group-item list-group-item-action bg-light"
                                v-on:click.native="sidebarShow = true"
                                v-bind:to="page.path"
                            >\{{ page.label }}</router-link>
                        </template>
                    </div>
                </div>
                <!-- /#sidebar-wrapper -->

                <!-- Rightside -->
                <div class="w-100">
                    <!-- Breadcrum -->
                    <b-breadcrumb class="m-0 border-bottom" style="border-radius: 0;">
                        <b-breadcrumb-item>
                            <router-link to="/">
                                <b-icon icon="house-fill" scale="1.25" shift-v="1.25" aria-hidden="true"></b-icon>
                            </router-link>
                        </b-breadcrumb-item>
                        <template v-for="(page, index) in breadcrumb">
                            <b-breadcrumb-item>
                                <router-link v-bind:to="page.path" v-bind:active="page.active">
                                    \{{ page.label }}
                                </router-link>
                            </b-breadcrumb-item>
                        </template>
                    </b-breadcrumb>
                    <!-- /$breadcrum-wrapper -->

                    <!-- Page Content -->
                    <div class="overflow-auto" style="height: calc(100vh - 106px)">
                        <transition name="fade" mode="out-in">
                            <router-view :key="routerViewKey"></router-view>
                        </transition>
                    </div>
                    <!-- /#page-content-wrapper -->
                </div>
                <!-- /#rightside-wrapper -->

            </div>
            <!-- /#wrapper -->
        </div>
        <!-- /#panel-wrapper -->

        <script>
            const error404 = {
                template: `{{> 404.hbs}}`
            };
            const inicio = {
                template: `{{> inicio.hbs}}`
            };
            {{> tablaItems/itemsJS.hbs}}
            {{> asociarCategoria/asociarCategoriaJS.hbs}}
            {{> asociarIngreso/asociarIngresoJS.hbs}}
            {{> operaciones/operacionesJS.hbs}}
            {{> bandeja/bandejaJS.hbs}}
            {{> configuracion/configuracionJS.hbs}}
            {{> agregarProveedor/agregarProveedorJS.hbs}}
            {{> agregarPresupuesto/agregarPresupuestoJS.hbs}}
            {{> agregarEgreso/agregarEgresoJS.hbs}}

            {{> router/routerJS.hbs}}

            var app = new Vue({
                el: "#panel",
                data: {
                    sidebar: [
                        {
                            label: "Operaciones",
                            path: '/operaciones',
                        },
                        {
                            label: "Bandeja de mensajes",
                            path: '/bandeja'
                        }
                    ],
                    login: {
                        user: "",
                        pass: "",
                        loginState: null,
                        userState: null,
                        passState: null,
                        loginLoading: false
                    },
                    sidebarShow: true,
                    breadcrumb: [],
                    query: '',
                    searchSelected: false,
                    loggedOut: false,
                    routerViewKey: 0
                },
                methods: {
                    updateBreadcrumb() {
                        
                        if(this.$route.meta.breadcrumb == undefined){
                            this.breadcrumb = [];
                            return;
                        }

                        var breadcrumb = JSON.parse(JSON.stringify(this.$route.meta.breadcrumb));

                        breadcrumb.forEach(crumb => {
                            if(crumb.type == "dynamic") {
                                var key = crumb.label;
                                var dynamicLabel = this.$route.params[key];

                                if(dynamicLabel != undefined) {
                                    crumb.label = dynamicLabel;
                                    crumb.path = crumb.path.replace(key, dynamicLabel);
                                }
                            }
                        });
                        this.breadcrumb = breadcrumb;
                    },
                    search() {
                        console.log(this.query);
                    },
                    showSessionEndedAlert() {
                        this.loggedOut = true;
                    },
                    loginAttempt() {
                        this.login.loginState = null;
                        this.login.userState = null;
                        this.login.passState = null;

                        console.log(`Usuario: ${this.login.user}`);
                        console.log(`Contraseña: ${this.login.pass}`);

                        if(this.login.user == "") {
                            this.login.userState = false;
                        } 
                        if(this.login.pass == "") {
                            this.login.passState = false;
                        }

                        if(this.login.user != "" && this.login.pass != "") {
                            this.login.loginLoading = true;
                            $.ajax({
                                url: "http://{{ ip }}/api/login",
                                type: "POST",
                                dataType: "json",
                                context: this,
                                data: JSON.stringify({
                                    username: this.login.user,
                                    password: this.login.pass
                                }),
                                success: function(data) {
                                    if(data.code == 200) {
                                        this.loginSuccess();
                                    }
                                    else {
                                        this.login.loginState = false;
                                    }
                                },
                                error: function(data) {
                                    console.log(data);
                                },
                                complete: function() {
                                    this.login.loginLoading = false;
                                }

                            });
                        }
                    },
                    loginSuccess() {
                        this.loggedOut = false;
                        this.routerViewKey ? this.routerViewKey++ : this.routerViewKey--;
                    }
                },
                router: router,
                watch: {
                    $route(to, from) {
                        this.updateBreadcrumb();
                    }
                },
                mounted() {
                    this.updateBreadcrumb();
                }
            });
            
            function convertDate(date) {
                var dateParsed = new Date(Date.parse(date));
                return ('0' + dateParsed.getDate()).slice(-2) + '/'
                    + ('0' + (dateParsed.getMonth()+1)).slice(-2) + '/'
                    + dateParsed.getFullYear();
            }
        </script>
    </body>
</html>